# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Config implements IConfig {
  lang: String!
  email: String
  enabled: Boolean
}

input ConfigInput {
  lang: String!
  email: String
  enabled: Boolean
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Extend implements IExtend {
  ptaDate: DateTime
  wptaDate: DateTime
}

input ExtendInput {
  ptaDate: DateTime
  wptaDate: DateTime
}

interface IConfig {
  lang: String!
  email: String
  enabled: Boolean
}

interface IExtend {
  ptaDate: DateTime
  wptaDate: DateTime
}

interface ILocation {
  country: String
  province: String
  district: String
}

interface IName {
  JP: String
  CN: String
  EN: String
}

interface IProfile {
  intro: String
  avatar: String
  blank: String
}

type Location implements ILocation {
  country: String
  province: String
  district: String
}

input LocationInput {
  country: String
  province: String
  district: String
}

type Music {
  id: Int!
  size: Float
  createdDate: DateTime!
  src: String
  arranger: String
  lyricist: String
}

type Mutation {
  addUser(user: UserInput!): User!
  modifyUser(user: UserInput!): User!
}

type Name implements IName {
  JP: String
  CN: String
  EN: String
}

input NameInput {
  JP: String
  CN: String
  EN: String
}

type Profile implements IProfile {
  intro: String
  avatar: String
  blank: String
}

input ProfileInput {
  intro: String
  avatar: String
  blank: String
}

type Query {
  user(id: String!): User!
}

type Resource {
  id: Int!
  size: Float
  createdDate: DateTime!
}

type User {
  id: ID!
  name: Name!
  loc: Location!
  prof: Profile!
  conf: Config!
  ext: Extend!
  createdDate: DateTime!
}

input UserInput {
  id: ID!
  name: NameInput
  prof: ProfileInput
  loc: LocationInput
  conf: ConfigInput
  ext: ExtendInput
}
